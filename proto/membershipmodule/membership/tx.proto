syntax = "proto3";

package membershipmodule.membership;

import "gogoproto/gogo.proto";
import "membershipmodule/membership/member.proto";

option go_package = "github.com/noria-net/module-membership/x/membership/types";

// Msg defines the Msg service.
service Msg {
  // Enroll creates a new membership enrollment
  rpc Enroll(MsgEnroll) returns (MsgEnrollResponse);
  // UpdateStatus updates a member's electorate status
  rpc UpdateStatus(MsgUpdateStatus) returns (MsgUpdateStatusResponse);
  // AddGuardians submits a proposal to add guardians
  rpc AddGuardians(MsgAddGuardians) returns (MsgAddGuardiansResponse);
}

// MsgEnroll provides details for a new membership enrollment.
message MsgEnroll {
  string creator = 1;
  string nickname = 3;
}

// MsgEnrollResponse is an empty response
message MsgEnrollResponse {}

// MsgUpdateStatus updates a member's electorate status
message MsgUpdateStatus {
  string creator = 1;
  string address = 2;
  MembershipStatus status = 3;
}

// MsgUpdateStatusResponse is an empty response
message MsgUpdateStatusResponse {}

// MsgAddGuardians submits a proposal to add guardians
message MsgAddGuardians {
  string creator = 1;
  repeated string guardians = 2;
}

// MsgAddGuardiansResponse is an empty response
message MsgAddGuardiansResponse {}

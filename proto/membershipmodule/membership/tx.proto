syntax = "proto3";

package membershipmodule.membership;

import "gogoproto/gogo.proto";
import "membershipmodule/membership/member.proto";

option go_package = "github.com/noria-net/module-membership/x/membership/types";

// Msg defines the Msg service.
service Msg {
  rpc Enroll       (MsgEnroll      ) returns (MsgEnrollResponse      );
  rpc UpdateStatus (MsgUpdateStatus) returns (MsgUpdateStatusResponse);
  rpc UpdateDirectDemocracy (MsgUpdateDirectDemocracy) returns (MsgUpdateDirectDemocracyResponse);
}
message MsgEnroll {
  string creator  = 1;
  string nickname = 3;
}

message MsgEnrollResponse {}

message MsgUpdateStatus {
  string creator = 1;
  string address = 2;
  MembershipStatus status  = 3;
}

message MsgUpdateStatusResponse {}

message MsgUpdateDirectDemocracy {
           string creator           = 1;
  repeated string add_guardians      = 2 [(gogoproto.nullable) = true];
  repeated string remove_guardians   = 3 [(gogoproto.nullable) = true];
           string total_voting_weight = 4 [
              (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
              (gogoproto.nullable) = true
            ];
}

message MsgUpdateDirectDemocracyResponse {}


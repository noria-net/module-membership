syntax = "proto3";
package membershipmodule.membership;

import "cosmos/auth/v1beta1/auth.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/noria-net/module-membership/x/membership/types";

// MembershipStatus enumerates the valid membership states for a citizen of The
// Denom
enum MembershipStatus {
  // MEMBERSHIP_STATUS_UNSPECIFIED defines a no-op status
  MEMBERSHIP_STATUS_UNSPECIFIED = 0 [(gogoproto.enumvalue_customname) = "MemberStatusEmpty"];
  // MEMBERSHIP_STATUS_ELECTORATE defines this member as being an active citizen
  MEMBERSHIP_STATUS_ELECTORATE = 1 [(gogoproto.enumvalue_customname) = "MemberElectorate"];
  // MEMBERSHIP_STATUS_INACTIVE defines this member as being an inactive citizen
  MEMBERSHIP_STATUS_INACTIVE = 2 [(gogoproto.enumvalue_customname) = "MemberInactive"];
  // MEMBERSHIP_STATUS_RECALLED defines this member as being recalled
  MEMBERSHIP_STATUS_RECALLED = 3 [(gogoproto.enumvalue_customname) = "MemberRecalled"];
  // MEMBERSHIP_STATUS_EXPULSED defines this member as being expulsed
  MEMBERSHIP_STATUS_EXPULSED = 4 [(gogoproto.enumvalue_customname) = "MemberExpulsed"];
}

// Member is a specialisation of BaseAccount that adds Member Status and
// Nickname
message Member {
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  cosmos.auth.v1beta1.BaseAccount base_account = 1 [(gogoproto.embed) = true];

  // status defines the membership status of this member
  MembershipStatus status = 2;
  // nickname defines the nickname of this member
  string nickname = 3;
  // is_guardian defines whether this member is a guardian
  bool is_guardian = 4;
}

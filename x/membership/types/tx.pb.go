// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: membershipmodule/membership/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgEnroll provides details for a new membership enrollment.
type MsgEnroll struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Nickname string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (m *MsgEnroll) Reset()         { *m = MsgEnroll{} }
func (m *MsgEnroll) String() string { return proto.CompactTextString(m) }
func (*MsgEnroll) ProtoMessage()    {}
func (*MsgEnroll) Descriptor() ([]byte, []int) {
	return fileDescriptor_c82c40c64be48422, []int{0}
}
func (m *MsgEnroll) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEnroll) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEnroll.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEnroll) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEnroll.Merge(m, src)
}
func (m *MsgEnroll) XXX_Size() int {
	return m.Size()
}
func (m *MsgEnroll) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEnroll.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEnroll proto.InternalMessageInfo

func (m *MsgEnroll) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgEnroll) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

// MsgEnrollResponse is an empty response
type MsgEnrollResponse struct {
}

func (m *MsgEnrollResponse) Reset()         { *m = MsgEnrollResponse{} }
func (m *MsgEnrollResponse) String() string { return proto.CompactTextString(m) }
func (*MsgEnrollResponse) ProtoMessage()    {}
func (*MsgEnrollResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c82c40c64be48422, []int{1}
}
func (m *MsgEnrollResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEnrollResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEnrollResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEnrollResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEnrollResponse.Merge(m, src)
}
func (m *MsgEnrollResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgEnrollResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEnrollResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEnrollResponse proto.InternalMessageInfo

// MsgUpdateStatus updates a member's electorate status
type MsgUpdateStatus struct {
	Creator string           `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Address string           `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Status  MembershipStatus `protobuf:"varint,3,opt,name=status,proto3,enum=membershipmodule.membership.MembershipStatus" json:"status,omitempty"`
}

func (m *MsgUpdateStatus) Reset()         { *m = MsgUpdateStatus{} }
func (m *MsgUpdateStatus) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateStatus) ProtoMessage()    {}
func (*MsgUpdateStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_c82c40c64be48422, []int{2}
}
func (m *MsgUpdateStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateStatus.Merge(m, src)
}
func (m *MsgUpdateStatus) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateStatus.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateStatus proto.InternalMessageInfo

func (m *MsgUpdateStatus) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateStatus) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgUpdateStatus) GetStatus() MembershipStatus {
	if m != nil {
		return m.Status
	}
	return MembershipStatus_MemberStatusEmpty
}

// MsgUpdateStatusResponse is an empty response
type MsgUpdateStatusResponse struct {
}

func (m *MsgUpdateStatusResponse) Reset()         { *m = MsgUpdateStatusResponse{} }
func (m *MsgUpdateStatusResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateStatusResponse) ProtoMessage()    {}
func (*MsgUpdateStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c82c40c64be48422, []int{3}
}
func (m *MsgUpdateStatusResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateStatusResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateStatusResponse.Merge(m, src)
}
func (m *MsgUpdateStatusResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateStatusResponse proto.InternalMessageInfo

// MsgAddGuardians submits a proposal to add guardians
type MsgAddGuardians struct {
	Creator   string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Guardians []string `protobuf:"bytes,2,rep,name=guardians,proto3" json:"guardians,omitempty"`
}

func (m *MsgAddGuardians) Reset()         { *m = MsgAddGuardians{} }
func (m *MsgAddGuardians) String() string { return proto.CompactTextString(m) }
func (*MsgAddGuardians) ProtoMessage()    {}
func (*MsgAddGuardians) Descriptor() ([]byte, []int) {
	return fileDescriptor_c82c40c64be48422, []int{4}
}
func (m *MsgAddGuardians) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddGuardians) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddGuardians.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddGuardians) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddGuardians.Merge(m, src)
}
func (m *MsgAddGuardians) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddGuardians) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddGuardians.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddGuardians proto.InternalMessageInfo

func (m *MsgAddGuardians) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddGuardians) GetGuardians() []string {
	if m != nil {
		return m.Guardians
	}
	return nil
}

// MsgAddGuardiansResponse is an empty response
type MsgAddGuardiansResponse struct {
}

func (m *MsgAddGuardiansResponse) Reset()         { *m = MsgAddGuardiansResponse{} }
func (m *MsgAddGuardiansResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddGuardiansResponse) ProtoMessage()    {}
func (*MsgAddGuardiansResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c82c40c64be48422, []int{5}
}
func (m *MsgAddGuardiansResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddGuardiansResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddGuardiansResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddGuardiansResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddGuardiansResponse.Merge(m, src)
}
func (m *MsgAddGuardiansResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddGuardiansResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddGuardiansResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddGuardiansResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgEnroll)(nil), "membershipmodule.membership.MsgEnroll")
	proto.RegisterType((*MsgEnrollResponse)(nil), "membershipmodule.membership.MsgEnrollResponse")
	proto.RegisterType((*MsgUpdateStatus)(nil), "membershipmodule.membership.MsgUpdateStatus")
	proto.RegisterType((*MsgUpdateStatusResponse)(nil), "membershipmodule.membership.MsgUpdateStatusResponse")
	proto.RegisterType((*MsgAddGuardians)(nil), "membershipmodule.membership.MsgAddGuardians")
	proto.RegisterType((*MsgAddGuardiansResponse)(nil), "membershipmodule.membership.MsgAddGuardiansResponse")
}

func init() {
	proto.RegisterFile("membershipmodule/membership/tx.proto", fileDescriptor_c82c40c64be48422)
}

var fileDescriptor_c82c40c64be48422 = []byte{
	// 375 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x6d, 0x5a, 0x68, 0xcd, 0x20, 0x8a, 0x51, 0x30, 0x46, 0x09, 0x25, 0x88, 0xf4, 0x60, 0x13,
	0xa8, 0x5e, 0x3c, 0x56, 0x28, 0xe2, 0x21, 0x97, 0x14, 0x2f, 0x9e, 0xdc, 0x36, 0xcb, 0x36, 0xd8,
	0xec, 0x86, 0xdd, 0x0d, 0xd4, 0xff, 0xe0, 0xc1, 0x9f, 0xe5, 0xcd, 0x1e, 0x3d, 0x4a, 0xfb, 0x47,
	0xc4, 0x7c, 0x35, 0x2d, 0x92, 0xea, 0x6d, 0x66, 0xf6, 0xcd, 0x7b, 0x6f, 0x1f, 0x0c, 0x9c, 0x87,
	0x38, 0x1c, 0x61, 0x2e, 0x26, 0x41, 0x14, 0x32, 0x3f, 0x9e, 0x62, 0x67, 0x35, 0x70, 0xe4, 0xcc,
	0x8e, 0x38, 0x93, 0x4c, 0x3b, 0xdd, 0x44, 0xd9, 0xab, 0x81, 0x71, 0x44, 0x18, 0x61, 0x09, 0xce,
	0xf9, 0xa9, 0xd2, 0x15, 0xa3, 0x53, 0x45, 0x9c, 0x96, 0x29, 0xd2, 0xea, 0x83, 0xea, 0x0a, 0x32,
	0xa0, 0x9c, 0x4d, 0xa7, 0x9a, 0x0e, 0xad, 0x31, 0xc7, 0x48, 0x32, 0xae, 0x2b, 0x6d, 0xa5, 0xa3,
	0x7a, 0x79, 0xab, 0x19, 0xb0, 0x43, 0x83, 0xf1, 0x33, 0x45, 0x21, 0xd6, 0x1b, 0xc9, 0x53, 0xd1,
	0x5b, 0x87, 0x70, 0x50, 0x50, 0x78, 0x58, 0x44, 0x8c, 0x0a, 0x6c, 0xbd, 0x2a, 0xb0, 0xef, 0x0a,
	0xf2, 0x10, 0xf9, 0x48, 0xe2, 0xa1, 0x44, 0x32, 0x16, 0x15, 0xf4, 0x3a, 0xb4, 0x90, 0xef, 0x73,
	0x2c, 0x84, 0x5e, 0x4f, 0x5f, 0xb2, 0x56, 0x1b, 0x40, 0x53, 0x24, 0xdb, 0x89, 0xec, 0x5e, 0xaf,
	0x6b, 0x57, 0xa4, 0x61, 0xbb, 0x45, 0x99, 0x4a, 0x7a, 0xd9, 0xb2, 0x75, 0x02, 0xc7, 0x1b, 0x6e,
	0x0a, 0xa7, 0xf7, 0x89, 0xd1, 0xbe, 0xef, 0xdf, 0xc5, 0x88, 0xfb, 0x01, 0xa2, 0x55, 0x46, 0xcf,
	0x40, 0x25, 0x39, 0x4c, 0xaf, 0xb7, 0x1b, 0x1d, 0xd5, 0x5b, 0x0d, 0x32, 0x95, 0x32, 0x55, 0xae,
	0xd2, 0xfb, 0xa8, 0x43, 0xc3, 0x15, 0x44, 0x7b, 0x82, 0x66, 0x16, 0xf6, 0x45, 0xf5, 0x4f, 0xf2,
	0x44, 0x0d, 0xfb, 0x6f, 0xb8, 0x5c, 0x49, 0xe3, 0xb0, 0xbb, 0x96, 0xfa, 0xe5, 0xb6, 0xfd, 0x32,
	0xda, 0xb8, 0xfe, 0x0f, 0xba, 0xac, 0xb9, 0x16, 0xe0, 0x56, 0xcd, 0x32, 0x7a, 0xbb, 0xe6, 0x6f,
	0x89, 0xde, 0x0e, 0xdf, 0x17, 0xa6, 0x32, 0x5f, 0x98, 0xca, 0xd7, 0xc2, 0x54, 0xde, 0x96, 0x66,
	0x6d, 0xbe, 0x34, 0x6b, 0x9f, 0x4b, 0xb3, 0xf6, 0x78, 0x43, 0x02, 0x39, 0x89, 0x47, 0xf6, 0x98,
	0x85, 0x0e, 0x65, 0x3c, 0x40, 0x5d, 0x8a, 0xa5, 0x93, 0x32, 0x77, 0x4b, 0x87, 0x30, 0x5b, 0x3b,
	0xb7, 0x97, 0x08, 0x8b, 0x51, 0x33, 0xb9, 0x8a, 0xab, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xcc,
	0xc0, 0xa6, 0x41, 0x9a, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// Enroll creates a new membership enrollment
	Enroll(ctx context.Context, in *MsgEnroll, opts ...grpc.CallOption) (*MsgEnrollResponse, error)
	// UpdateStatus updates a member's electorate status
	UpdateStatus(ctx context.Context, in *MsgUpdateStatus, opts ...grpc.CallOption) (*MsgUpdateStatusResponse, error)
	// AddGuardians submits a proposal to add guardians
	AddGuardians(ctx context.Context, in *MsgAddGuardians, opts ...grpc.CallOption) (*MsgAddGuardiansResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) Enroll(ctx context.Context, in *MsgEnroll, opts ...grpc.CallOption) (*MsgEnrollResponse, error) {
	out := new(MsgEnrollResponse)
	err := c.cc.Invoke(ctx, "/membershipmodule.membership.Msg/Enroll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateStatus(ctx context.Context, in *MsgUpdateStatus, opts ...grpc.CallOption) (*MsgUpdateStatusResponse, error) {
	out := new(MsgUpdateStatusResponse)
	err := c.cc.Invoke(ctx, "/membershipmodule.membership.Msg/UpdateStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddGuardians(ctx context.Context, in *MsgAddGuardians, opts ...grpc.CallOption) (*MsgAddGuardiansResponse, error) {
	out := new(MsgAddGuardiansResponse)
	err := c.cc.Invoke(ctx, "/membershipmodule.membership.Msg/AddGuardians", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// Enroll creates a new membership enrollment
	Enroll(context.Context, *MsgEnroll) (*MsgEnrollResponse, error)
	// UpdateStatus updates a member's electorate status
	UpdateStatus(context.Context, *MsgUpdateStatus) (*MsgUpdateStatusResponse, error)
	// AddGuardians submits a proposal to add guardians
	AddGuardians(context.Context, *MsgAddGuardians) (*MsgAddGuardiansResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) Enroll(ctx context.Context, req *MsgEnroll) (*MsgEnrollResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Enroll not implemented")
}
func (*UnimplementedMsgServer) UpdateStatus(ctx context.Context, req *MsgUpdateStatus) (*MsgUpdateStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStatus not implemented")
}
func (*UnimplementedMsgServer) AddGuardians(ctx context.Context, req *MsgAddGuardians) (*MsgAddGuardiansResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddGuardians not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_Enroll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgEnroll)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Enroll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/membershipmodule.membership.Msg/Enroll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Enroll(ctx, req.(*MsgEnroll))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/membershipmodule.membership.Msg/UpdateStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateStatus(ctx, req.(*MsgUpdateStatus))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddGuardians_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddGuardians)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddGuardians(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/membershipmodule.membership.Msg/AddGuardians",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddGuardians(ctx, req.(*MsgAddGuardians))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "membershipmodule.membership.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Enroll",
			Handler:    _Msg_Enroll_Handler,
		},
		{
			MethodName: "UpdateStatus",
			Handler:    _Msg_UpdateStatus_Handler,
		},
		{
			MethodName: "AddGuardians",
			Handler:    _Msg_AddGuardians_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "membershipmodule/membership/tx.proto",
}

func (m *MsgEnroll) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEnroll) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEnroll) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Nickname) > 0 {
		i -= len(m.Nickname)
		copy(dAtA[i:], m.Nickname)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Nickname)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgEnrollResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEnrollResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEnrollResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Status != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateStatusResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateStatusResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateStatusResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddGuardians) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddGuardians) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddGuardians) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Guardians) > 0 {
		for iNdEx := len(m.Guardians) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Guardians[iNdEx])
			copy(dAtA[i:], m.Guardians[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Guardians[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddGuardiansResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddGuardiansResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddGuardiansResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgEnroll) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Nickname)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgEnrollResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovTx(uint64(m.Status))
	}
	return n
}

func (m *MsgUpdateStatusResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddGuardians) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Guardians) > 0 {
		for _, s := range m.Guardians {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgAddGuardiansResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgEnroll) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEnroll: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEnroll: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nickname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Nickname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEnrollResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEnrollResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEnrollResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= MembershipStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateStatusResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateStatusResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateStatusResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddGuardians) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddGuardians: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddGuardians: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Guardians", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Guardians = append(m.Guardians, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddGuardiansResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddGuardiansResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddGuardiansResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)

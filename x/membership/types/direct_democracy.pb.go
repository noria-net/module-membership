// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: membershipmodule/membership/direct_democracy.proto

package types

import (
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type DirectDemocracy struct {
	// Total voting weight percentage available to the Guardians, divided equally among them
	TotalVotingWeight github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,1,opt,name=total_voting_weight,json=totalVotingWeight,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"total_voting_weight,omitempty"`
	// Guardians is the list of members who have elevated democratic privileges
	Guardians []string `protobuf:"bytes,2,rep,name=guardians,proto3" json:"guardians,omitempty"`
}

func (m *DirectDemocracy) Reset()         { *m = DirectDemocracy{} }
func (m *DirectDemocracy) String() string { return proto.CompactTextString(m) }
func (*DirectDemocracy) ProtoMessage()    {}
func (*DirectDemocracy) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc1833cea5478edf, []int{0}
}
func (m *DirectDemocracy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DirectDemocracy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DirectDemocracy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DirectDemocracy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DirectDemocracy.Merge(m, src)
}
func (m *DirectDemocracy) XXX_Size() int {
	return m.Size()
}
func (m *DirectDemocracy) XXX_DiscardUnknown() {
	xxx_messageInfo_DirectDemocracy.DiscardUnknown(m)
}

var xxx_messageInfo_DirectDemocracy proto.InternalMessageInfo

func (m *DirectDemocracy) GetGuardians() []string {
	if m != nil {
		return m.Guardians
	}
	return nil
}

func init() {
	proto.RegisterType((*DirectDemocracy)(nil), "membershipmodule.membership.DirectDemocracy")
}

func init() {
	proto.RegisterFile("membershipmodule/membership/direct_democracy.proto", fileDescriptor_dc1833cea5478edf)
}

var fileDescriptor_dc1833cea5478edf = []byte{
	// 298 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0xca, 0x4d, 0xcd, 0x4d,
	0x4a, 0x2d, 0x2a, 0xce, 0xc8, 0x2c, 0xc8, 0xcd, 0x4f, 0x29, 0xcd, 0x49, 0xd5, 0x47, 0x08, 0xe8,
	0xa7, 0x64, 0x16, 0xa5, 0x26, 0x97, 0xc4, 0xa7, 0xa4, 0xe6, 0xe6, 0x27, 0x17, 0x25, 0x26, 0x57,
	0xea, 0x15, 0x14, 0xe5, 0x97, 0xe4, 0x0b, 0x49, 0xa3, 0xeb, 0xd1, 0x43, 0x08, 0x48, 0x69, 0xe0,
	0x33, 0x10, 0xc2, 0x84, 0x18, 0x23, 0x25, 0x92, 0x9e, 0x9f, 0x9e, 0x0f, 0x66, 0xea, 0x83, 0x58,
	0x10, 0x51, 0xa5, 0xb3, 0x8c, 0x5c, 0xfc, 0x2e, 0x60, 0x7b, 0x5d, 0x60, 0xd6, 0x0a, 0xd5, 0x73,
	0x09, 0x97, 0xe4, 0x97, 0x24, 0xe6, 0xc4, 0x97, 0xe5, 0x97, 0x64, 0xe6, 0xa5, 0xc7, 0x97, 0xa7,
	0x66, 0xa6, 0x67, 0x94, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0xf0, 0x38, 0xf9, 0x9f, 0xb8, 0x27, 0xcf,
	0x70, 0xeb, 0x9e, 0xbc, 0x5a, 0x7a, 0x66, 0x49, 0x46, 0x69, 0x92, 0x5e, 0x72, 0x7e, 0xae, 0x7e,
	0x72, 0x7e, 0x71, 0x6e, 0x7e, 0x31, 0x94, 0xd2, 0x2d, 0x4e, 0xc9, 0xd6, 0x2f, 0xa9, 0x2c, 0x48,
	0x2d, 0xd6, 0x73, 0x49, 0x4d, 0x7e, 0x75, 0x4f, 0x5e, 0x16, 0x8b, 0x61, 0x3a, 0xf9, 0xb9, 0x99,
	0x25, 0xa9, 0xb9, 0x05, 0x25, 0x95, 0x41, 0x82, 0x60, 0xe9, 0x30, 0xb0, 0x6c, 0x38, 0x58, 0x52,
	0xc8, 0x92, 0x8b, 0x33, 0xbd, 0x34, 0xb1, 0x28, 0x25, 0x33, 0x31, 0xaf, 0x58, 0x82, 0x49, 0x81,
	0x59, 0x83, 0xd3, 0x49, 0x1a, 0x64, 0xed, 0xab, 0x7b, 0xf2, 0xc2, 0x70, 0x09, 0x24, 0x23, 0x10,
	0xaa, 0x9d, 0x82, 0x4f, 0x3c, 0x92, 0x63, 0xbc, 0xf0, 0x48, 0x8e, 0xf1, 0xc1, 0x23, 0x39, 0xc6,
	0x09, 0x8f, 0xe5, 0x18, 0x2e, 0x3c, 0x96, 0x63, 0xb8, 0xf1, 0x58, 0x8e, 0x21, 0xca, 0x12, 0xc9,
	0xc1, 0x79, 0xf9, 0x45, 0x99, 0x89, 0xba, 0x79, 0xa9, 0x25, 0xfa, 0x90, 0x40, 0xd3, 0x45, 0x0a,
	0xb4, 0x0a, 0xe4, 0x10, 0x04, 0xfb, 0x23, 0x89, 0x0d, 0x1c, 0x56, 0xc6, 0x80, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x6e, 0xfa, 0x55, 0x6e, 0xbe, 0x01, 0x00, 0x00,
}

func (m *DirectDemocracy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DirectDemocracy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DirectDemocracy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Guardians) > 0 {
		for iNdEx := len(m.Guardians) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Guardians[iNdEx])
			copy(dAtA[i:], m.Guardians[iNdEx])
			i = encodeVarintDirectDemocracy(dAtA, i, uint64(len(m.Guardians[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	{
		size := m.TotalVotingWeight.Size()
		i -= size
		if _, err := m.TotalVotingWeight.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintDirectDemocracy(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintDirectDemocracy(dAtA []byte, offset int, v uint64) int {
	offset -= sovDirectDemocracy(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *DirectDemocracy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.TotalVotingWeight.Size()
	n += 1 + l + sovDirectDemocracy(uint64(l))
	if len(m.Guardians) > 0 {
		for _, s := range m.Guardians {
			l = len(s)
			n += 1 + l + sovDirectDemocracy(uint64(l))
		}
	}
	return n
}

func sovDirectDemocracy(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDirectDemocracy(x uint64) (n int) {
	return sovDirectDemocracy(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *DirectDemocracy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDirectDemocracy
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DirectDemocracy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DirectDemocracy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalVotingWeight", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDirectDemocracy
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDirectDemocracy
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDirectDemocracy
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.TotalVotingWeight.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Guardians", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDirectDemocracy
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDirectDemocracy
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDirectDemocracy
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Guardians = append(m.Guardians, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDirectDemocracy(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDirectDemocracy
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDirectDemocracy(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDirectDemocracy
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDirectDemocracy
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDirectDemocracy
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDirectDemocracy
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDirectDemocracy
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDirectDemocracy
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDirectDemocracy        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDirectDemocracy          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDirectDemocracy = fmt.Errorf("proto: unexpected end of group")
)
